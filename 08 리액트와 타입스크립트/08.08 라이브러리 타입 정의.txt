개발을 하다 보면 많은 외부 라이브러리를 사용하게 된다.
외부 라이브러리의 타입 정의는 해당 라이브러리의 대응 상황에 따라 세 가지 패턴으로 나뉜다.

패턴1: 타입 정의가 없다
해당 라이브러리 주변의 코드는 타입 정의를 하지 않고 사용하거나 직접 타입 정의를 작성할 수 있다.
타입 정의 존재 여부는 타입스크립트 프로젝트에서 라이브러리를 선정할 때 중요 지표이다.

패턴2: 라이브러리가 타입 정의를 포함하고 있다.
일반적으로 npm 혹은 yarn에서 라이브러리를 설치하면 타입이 적용된 상태에서 사용할 수 있다.
타입 정의 포함 여부는 깃허브 저장소에서 ~.d.ts 파일 여부로 판별할 수 있다.
ex) axios 깃허브 저장소에는 index.d.ts 폴더가 확인되며 이를 통해 타입 정의를 포함하는 것을 알 수 있다.

패턴3: 타입 정의를 별도로 설치한다.
DefinitelyTyped라는 저장소에서 다양한 라이브러리 타입 정의를 관리하고 있다.
DefinitelyTyped에 타입 정의가 있는 라이브러리는 npm 혹은 yarn에서 @types/라이브러리명으로 타입 정의를 설치할 수 있다.
ex) npm install -D @types/react-router-dom

타입 정의 존재 여부를 DefinitelyTyped에서 확인하는 방법으로는 타입스크립트에서 공식 제공하는 Type Search 페이지를 통해 검색하거나
npm info @types/라이브러리명을 실행해 반환되는 정보를 확인하는 방법이 있다.