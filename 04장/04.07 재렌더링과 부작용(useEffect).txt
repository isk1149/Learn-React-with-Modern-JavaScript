State가 변경될 때 함수 컴포넌트는 다시 처음부터 처리가 실행되면서 차이가 있는 DOM을 감지하고 업데이트해서 화면을 표시한다.
이와 같이 변경을 감지하고 컴포넌트를 다시 처리하는 것을 재렌더링이라 한다.(State외에도 재렌더링 조건이 있는데 이후 공부)

참고로 컴포넌트가 다시 처음부터 실행된다 하더라도 맨 처음의 렌더링(컴포넌트 마운트)과 재렌더링은 다르다.
useState의 괄호로 설정한 초깃값은 마운트 시에만 적용되며 매번 초기화되지 않는다.

useEffect는 컴포넌트의 부작용을 제어하는 기능이다.
import { useEffect } from 'react';
useEffect(실행하는 함수[, 의존 배열]);

useEffect의 역할은 어떤 값이 변했을 때에 한해서만 어떤 처리를 실행하는 기능을 한다.
ex. num(num1, num2)이라는 State의 값이 변했을 때만 경고를 표시
useEffect(() => {
  alert();
}, [num]);

useEffect(() => {
  alert();
}, [num1, num2]);

useEffect는 의존 배열에 지정한 값이 변했을 때와 더불어 컴포넌트 마운트(가장 처음)에도 실행된다.
의존배열을 []로 지정하면 컴포넌트 마운트 시에만 실행된다.

이런 기능이 존재하는 이유는 컴포넌트는 재렌더링이 많기 때문이다.
State 수가 많아지면 재렌더링 횟수도 늘어난다.

따라서 재렌더링할 때마다 처리를 실행하는 것은 비용을 낭비하게 되므로 값이 변했을 때만 실행하려면 useEffect를 사용한다.